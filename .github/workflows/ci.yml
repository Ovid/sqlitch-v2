name: CI

on:
  push:
    branches:
      - main
      - "release/**"
      - "001-we-re-going"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Checks (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip wheel

      - name: Install project with dev extras
        run: python -m pip install ".[dev]"

      - name: Start Docker services
        if: runner.os == 'Linux'
        run: |
          chmod +x scripts/docker-compose/*
          scripts/docker-compose/up
          scripts/docker-compose/wait

      - name: Run tox suite
        run: python -m tox -vv

      - name: Generate coverage XML
        if: runner.os == 'Linux'
        run: python -m coverage xml

      - name: Upload coverage artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-linux
          path: |
            .coverage
            coverage.xml
          if-no-files-found: ignore

      - name: Tear down Docker services
        if: runner.os == 'Linux' && always()
        run: scripts/docker-compose/down
